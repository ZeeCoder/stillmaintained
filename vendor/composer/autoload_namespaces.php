<?php

// autoload_namespaces.php @generated by Composer

$vendorDir = dirname(dirname(__FILE__));
$baseDir = dirname($vendorDir);

return array(
    'phpDocumentor' => array($vendorDir . '/phpdocumentor/reflection-docblock/src'),
    'josegonzalez\\Dotenv' => array($vendorDir . '/josegonzalez/dotenv/src', $vendorDir . '/josegonzalez/dotenv/tests'),
    'Whoops' => array($vendorDir . '/filp/whoops/src'),
    'Symfony\\Component\\Yaml\\' => array($vendorDir . '/symfony/yaml'),
    'Symfony\\Component\\Finder\\' => array($vendorDir . '/symfony/finder'),
    'Symfony\\Component\\Filesystem\\' => array($vendorDir . '/symfony/filesystem'),
    'Symfony\\Component\\EventDispatcher\\' => array($vendorDir . '/symfony/event-dispatcher'),
    'Symfony\\Component\\DomCrawler\\' => array($vendorDir . '/symfony/dom-crawler'),
    'Symfony\\Component\\CssSelector\\' => array($vendorDir . '/symfony/css-selector'),
    'Symfony\\Component\\Console\\' => array($vendorDir . '/symfony/console'),
    'Symfony\\Component\\Config\\' => array($vendorDir . '/symfony/config'),
    'Symfony\\Component\\ClassLoader\\' => array($vendorDir . '/symfony/class-loader'),
    'Symfony\\Component\\BrowserKit\\' => array($vendorDir . '/symfony/browser-kit'),
    'Psr\\Log\\' => array($vendorDir . '/psr/log'),
    'Prophecy\\' => array($vendorDir . '/phpspec/prophecy/src'),
    'Phinx' => array($vendorDir . '/robmorgan/phinx/src'),
    'Guzzle\\Tests' => array($vendorDir . '/guzzle/guzzle/tests'),
    'Guzzle' => array($vendorDir . '/guzzle/guzzle/src'),
    'Github\\' => array($vendorDir . '/knplabs/github-api/lib'),
    'Doctrine\\Instantiator\\' => array($vendorDir . '/doctrine/instantiator/src'),
    'Detection' => array($vendorDir . '/mobiledetect/mobiledetectlib/namespaced'),
    'Composer\\Installers\\' => array($vendorDir . '/composer/installers/src'),
    'Codeception\\' => array($vendorDir . '/codeception/specify/src'),
    'Codeception' => array($vendorDir . '/codeception/codeception/src'),
    'Carbon' => array($vendorDir . '/nesbot/carbon/src'),
    'Boris' => array($vendorDir . '/d11wtq/boris/lib'),
    'Aura\\Intl' => array($vendorDir . '/aura/intl/src'),
    'Aura\\Composer\\' => array($vendorDir . '/aura/installer-default/src'),
);
